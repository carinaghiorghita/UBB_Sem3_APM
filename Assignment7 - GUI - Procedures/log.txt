
Thread ID:1
Execution Stack:(v<-int;(w<-int;(v=2;(w=5;(call sum();(print(v);)))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: print(v) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v<-int;(w<-int;(v=2;(w=5;(call sum();(print(v);)))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v<-int;(w<-int;(v=2;(w=5;(call sum();(print(v);)))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b, a]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v<-int;(w<-int;(v=2;(w=5;(call sum();(print(v);)))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v<-int;(w<-int;(v=2;(w=5;(call sum();(print(v);)))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v<-int;(w<-int;(v=2;(w=5;(call sum();(print(v);)))))) 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);)))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v<-int;(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))))) 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v<-int;(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))))) 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v<-int;(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))))) 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) print(v) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) print(v) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) print(v) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(call product();(fork(call sum());)) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(call product();(fork(call sum());)) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(call product();(fork(call sum());)) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) call product() 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) call product() 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v<-int;(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))))) 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) print(v) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) print(v) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) print(v) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v<-int;(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))))) 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:v->2 w->5  a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:v->2 w->5  a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:v->2 w->5  a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:v->2 w->5  a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:v->2 w->5  a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:v->2 w->5  a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:v->2 w->5  a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:v->2 w->5  a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:v->2 w->5  a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) print(v) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) print(v) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) print(v) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: fork((call product();(fork(call sum());))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: fork((call product();(fork(call sum());))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: fork((call product();(fork(call sum());))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(call product();(fork(call sum());)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(call product();(fork(call sum());)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(call product();(fork(call sum());)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) call product() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) call product() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) call product() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v<-int;(v=a*b;(print(v);))) 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v<-int;(v=a*b;(print(v);))) 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v<-int;(v=a*b;(print(v);))) 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v=a*b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v=a*b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v=a*b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v=a*b;(print(v);)) 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v=a*b;(print(v);)) 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v=a*b;(print(v);)) 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (print(v);) v=a*b 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (print(v);) v=a*b 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (print(v);) v=a*b 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (print(v);) 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (print(v);) 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (print(v);) 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return  print(v) 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return  print(v) 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return  print(v) 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return  
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return  
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return  
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack: fork(call sum()) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack: fork(call sum()) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack: fork(call sum()) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v=a+b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v=a+b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v=a+b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v=a+b;(print(v);)) 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v=a+b;(print(v);)) 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v=a+b;(print(v);)) 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (print(v);) v=a+b 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (print(v);) v=a+b 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (print(v);) v=a+b 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (print(v);) 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (print(v);) 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (print(v);) 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return  print(v) 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return  print(v) 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return  print(v) 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return  
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return  
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return  
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v<-int;(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))))) 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) v<-int 
Symbol Table: 
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w<-int;(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))))) 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) w<-int 
Symbol Table:v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(v=2;(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));))))) 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) v=2 
Symbol Table:v->0 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(w=5;(call sum();(print(v);(fork((call product();(fork(call sum());)));)))) 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) w=5 
Symbol Table:v->2 w->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(call sum();(print(v);(fork((call product();(fork(call sum());)));))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:v->2 w->5  a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:v->2 w->5  a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:v->2 w->5  a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->20 b->5  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:v->2 w->5  a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:v->2 w->5  a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (v=a+b;(print(v);)) 
Symbol Table:v->2 w->5  a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:v->2 w->5  a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:v->2 w->5  a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) v=a+b 
Symbol Table:v->2 w->5  a->20 b->5 v->0  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return (print(v);) 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  print(v) 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return  
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) return 
Symbol Table:v->2 w->5  a->20 b->5 v->25  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(print(v);(fork((call product();(fork(call sum());)));)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) print(v) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) print(v) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) print(v) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:(fork((call product();(fork(call sum());)));) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: fork((call product();(fork(call sum());))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: fork((call product();(fork(call sum());))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: fork((call product();(fork(call sum());))) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(call product();(fork(call sum());)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(call product();(fork(call sum());)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(call product();(fork(call sum());)) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) call product() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) call product() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) call product() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v<-int;(v=a*b;(print(v);))) 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v<-int;(v=a*b;(print(v);))) 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v<-int;(v=a*b;(print(v);))) 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v=a*b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v=a*b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v=a*b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v=a*b;(print(v);)) 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v=a*b;(print(v);)) 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (v=a*b;(print(v);)) 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (print(v);) v=a*b 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (print(v);) v=a*b 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (print(v);) v=a*b 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (print(v);) 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (print(v);) 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return (print(v);) 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return  print(v) 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return  print(v) 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return  print(v) 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return  
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return  
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return  
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) return 
Symbol Table:v->2 w->5  a->2 b->5 v->10  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:(fork(call sum());) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack: fork(call sum()) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack: fork(call sum()) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack: fork(call sum()) 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:call sum() 
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v<-int;(v=a+b;(print(v);))) 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v=a+b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v=a+b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v=a+b;(print(v);)) v<-int 
Symbol Table:v->2 w->5  a->2 b->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v=a+b;(print(v);)) 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v=a+b;(print(v);)) 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (v=a+b;(print(v);)) 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (print(v);) v=a+b 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (print(v);) v=a+b 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (print(v);) v=a+b 
Symbol Table:v->2 w->5  a->2 b->5 v->0  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (print(v);) 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (print(v);) 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return (print(v);) 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return  print(v) 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return  print(v) 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return  print(v) 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return  
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return  
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return  
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:return 
Symbol Table:v->2 w->5  a->2 b->5 v->7  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->2 w->5  
File Table:
Heap Table:
Output:25 2 10 7 

ProcTable:product->[a, b]=(v<-int;(v=a*b;(print(v);))) sum->[a, b]=(v<-int;(v=a+b;(print(v);))) 

--------------------------------
