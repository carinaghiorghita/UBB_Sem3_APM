
Thread ID:1
Execution Stack:(v<-int;(v=0;(do (fork((print(v);v=v-1));v=v+1) while v<3;print(v*10)))) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(v=0;(do (fork((print(v);v=v-1));v=v+1) while v<3;print(v*10))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(v=0;(do (fork((print(v);v=v-1));v=v+1) while v<3;print(v*10))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(v=0;(do (fork((print(v);v=v-1));v=v+1) while v<3;print(v*10))) v<-int 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(v=0;(do (fork((print(v);v=v-1));v=v+1) while v<3;print(v*10))) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(v=0;(do (fork((print(v);v=v-1));v=v+1) while v<3;print(v*10))) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(v=0;(do (fork((print(v);v=v-1));v=v+1) while v<3;print(v*10))) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(do (fork((print(v);v=v-1));v=v+1) while v<3;print(v*10)) v=0 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(do (fork((print(v);v=v-1));v=v+1) while v<3;print(v*10)) v=0 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(do (fork((print(v);v=v-1));v=v+1) while v<3;print(v*10)) v=0 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(do (fork((print(v);v=v-1));v=v+1) while v<3;print(v*10)) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(do (fork((print(v);v=v-1));v=v+1) while v<3;print(v*10)) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(do (fork((print(v);v=v-1));v=v+1) while v<3;print(v*10)) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) do (fork((print(v);v=v-1));v=v+1) while v<3 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) do (fork((print(v);v=v-1));v=v+1) while v<3 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) do (fork((print(v);v=v-1));v=v+1) while v<3 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) ((fork((print(v);v=v-1));v=v+1);while(v<3) {(fork((print(v);v=v-1));v=v+1)}) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) ((fork((print(v);v=v-1));v=v+1);while(v<3) {(fork((print(v);v=v-1));v=v+1)}) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) ((fork((print(v);v=v-1));v=v+1);while(v<3) {(fork((print(v);v=v-1));v=v+1)}) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} (fork((print(v);v=v-1));v=v+1) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} (fork((print(v);v=v-1));v=v+1) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} (fork((print(v);v=v-1));v=v+1) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 fork((print(v);v=v-1)) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 fork((print(v);v=v-1)) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 fork((print(v);v=v-1)) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:(print(v);v=v-1) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:(print(v);v=v-1) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:(print(v);v=v-1) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} 
Symbol Table:v->1 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:v=v-1 print(v) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} 
Symbol Table:v->1 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:v=v-1 print(v) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} 
Symbol Table:v->1 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:v=v-1 print(v) 
Symbol Table:v->0 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} (fork((print(v);v=v-1));v=v+1) 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:v=v-1 
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} (fork((print(v);v=v-1));v=v+1) 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:v=v-1 
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} (fork((print(v);v=v-1));v=v+1) 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:v=v-1 
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 fork((print(v);v=v-1)) 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 fork((print(v);v=v-1)) 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 fork((print(v);v=v-1)) 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:(print(v);v=v-1) 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:(print(v);v=v-1) 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:(print(v);v=v-1) 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:v=v-1 print(v) 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:v=v-1 print(v) 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:v=v-1 print(v) 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} (fork((print(v);v=v-1));v=v+1) 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:v=v-1 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} (fork((print(v);v=v-1));v=v+1) 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:v=v-1 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} (fork((print(v);v=v-1));v=v+1) 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:v=v-1 
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 fork((print(v);v=v-1)) 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 fork((print(v);v=v-1)) 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 fork((print(v);v=v-1)) 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:8
Execution Stack:(print(v);v=v-1) 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:8
Execution Stack:(print(v);v=v-1) 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} v=v+1 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:8
Execution Stack:(print(v);v=v-1) 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} 
Symbol Table:v->3 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:8
Execution Stack:v=v-1 print(v) 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} 
Symbol Table:v->3 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:8
Execution Stack:v=v-1 print(v) 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) while(v<3) {(fork((print(v);v=v-1));v=v+1)} 
Symbol Table:v->3 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:8
Execution Stack:v=v-1 print(v) 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) 
Symbol Table:v->3 
File Table:
Heap Table:
Output:0 1 2 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 2 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 1 2 

Semaphore Table:

--------------------------------

Thread ID:8
Execution Stack:v=v-1 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 2 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) 
Symbol Table:v->3 
File Table:
Heap Table:
Output:0 1 2 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 2 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 1 2 

Semaphore Table:

--------------------------------

Thread ID:8
Execution Stack:v=v-1 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 2 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:print(v*10) 
Symbol Table:v->3 
File Table:
Heap Table:
Output:0 1 2 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 2 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 1 2 

Semaphore Table:

--------------------------------

Thread ID:8
Execution Stack:v=v-1 
Symbol Table:v->2 
File Table:
Heap Table:
Output:0 1 2 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->3 
File Table:
Heap Table:
Output:0 1 2 30 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 2 30 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 1 2 30 

Semaphore Table:

--------------------------------

Thread ID:8
Execution Stack:
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 1 2 30 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:v->3 
File Table:
Heap Table:
Output:0 1 2 30 

Semaphore Table:

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:v->-1 
File Table:
Heap Table:
Output:0 1 2 30 

Semaphore Table:

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:v->0 
File Table:
Heap Table:
Output:0 1 2 30 

Semaphore Table:

--------------------------------

Thread ID:8
Execution Stack:
Symbol Table:v->1 
File Table:
Heap Table:
Output:0 1 2 30 

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(v1<-Ref(int);(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))))) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(v1<-Ref(int);(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))))) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(v1<-Ref(int);(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))))) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(v1<-Ref(int);(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))))) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(v1<-Ref(int);(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))))) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(v1<-Ref(int);(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))))) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))));(acquire(cnt);(print(read(v1)-1);release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));release(cnt)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));release(cnt))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));release(cnt)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);release(cnt)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));release(cnt)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(v1<-Ref(int);(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))))) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(v1<-Ref(int);(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))))) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(v1<-Ref(int);(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))))) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(v1<-Ref(int);(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))))) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) print(read(v1)-1) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) print(read(v1)-1) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) print(read(v1)-1) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 19 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(v1<-Ref(int);(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))))) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*2) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*2) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*2) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) print(read(v1)-1) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) print(read(v1)-1) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) print(read(v1)-1) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(v1<-Ref(int);(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))))) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*2) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*2) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*2) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:4
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[4],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) print(read(v1)-1) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) print(read(v1)-1) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) print(read(v1)-1) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:4
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(v1<-Ref(int);(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))))) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) v1<-Ref(int) 
Symbol Table:
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(cnt<-int;(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))))) 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) cnt<-int 
Symbol Table:v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(new(v1,2);(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))))) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) new(v1,2) 
Symbol Table:cnt->0 v1->(0,int) 
File Table:
Heap Table:
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(newSemaphore(cnt,read(v1),1);(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))))) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) newSemaphore(cnt,read(v1),1) 
Symbol Table:cnt->0 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))));(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) fork((acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))));(acquire(cnt);(print(read(v1)-1);(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) fork((acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(acquire(cnt);(print(read(v1)-1);(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(write(v1,read(v1)*10);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(acquire(cnt);(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->2 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:2
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[2],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*10);(write(v1,read(v1)*2);(print(read(v1));(release(cnt);)))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) write(v1,read(v1)*10) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->20 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(write(v1,read(v1)*2);(print(read(v1));(release(cnt);))) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*2) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*2) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(print(read(v1));(release(cnt);)) write(v1,read(v1)*2) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->200 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(print(read(v1));(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(release(cnt);) print(read(v1)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:3
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[3],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:3
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:3
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) acquire(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:3
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(print(read(v1)-1);(release(cnt);)) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) print(read(v1)-1) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) print(read(v1)-1) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) print(read(v1)-1) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack:(release(cnt);) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: release(cnt) 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[1],1> 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack: 
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:1
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:2
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------

Thread ID:3
Execution Stack:
Symbol Table:cnt->1 v1->(1,int) 
File Table:
Heap Table:1->400 
Output:20 400 399 

Semaphore Table:1-><2,[],1> 

--------------------------------
